---
# tasks file for kube_master_config
- name: docker installtion
  package:
    name: docker
    state: present
  
- name: starting the docker service
  service:
    name: docker
    state: started
    enabled: yes

- name: configuration of yum repository
  yum_repository:
    name: kubernetes
    description: yum repo for k8s
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-$basearch
    enabled: yes
    gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    repo_gpgcheck: yes

- name: installation of kubernetes 
  package:
    name:
      - "kubeadm"
      - "kubelet"
      - "kubectl"
    state: present
    disable_excludes: "kubernetes"
  
- name: installing iproute-tc
  package:
    name: iproute-tc
    state: present

- name: starting kubelet service
  service:
    name: kubelet
    state: started
    enabled: yes

- name: pulling the images 
  command: "kubeadm config images pull"
  
- name: copying the content of daemon.json
  copy:
    dest: /etc/docker.daemon.json
    src: daemon.json

- name: restarting the docker service
  service:
    name: docker
    state: restarted

- name: copying k8s.conf file
  copy:
    dest: /etc/sysctl.d/k8s.conf
    src: k8s.conf

- name: executing the command sysctl
  shell: "sysctl --system"

- name: initalizing kubeadm service
  shell: "kubeadm init --pod-network-cidr=10.244.0.0/16 --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem"
  ignore_errors: yes

- name: creating a directory
  file:
    name: "$HOME/.kube"
    state: directory

- name: copy conf file
  command: "cp -i /etc/kubernetes/admin.conf $HOME/.kube/config"
  ignore_errors: yes

- name: changing owner for config file
  shell: "chown $(id -u):$(id -g) $HOME/.kube/config"

- name: adding flannel network
  shell: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

- name: joining token
  shell: "kubeadm token create --print-join-command"
  register: token

- name: storing token in local file
  local_action: copy content={{ token.stdout_lines[0] }} dest=/root/token.sh



